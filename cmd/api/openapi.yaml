openapi: 3.1.1
info:
  title: Payment System API
  version: "1.0.0"
servers:
  - url: http://localhost:8080
security:
  - bearerAuth: []
tags:
  - name: Orders
    description: Order lifecycle endpoints

paths:
  /orders:
    post:
      operationId: createOrder
      tags: [Orders]
      summary: Create order
      description: Create a new order for the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount_jpy]
              properties:
                amount_jpy:
                  type: integer
                  format: int64
                  minimum: 1
                  description: Amount in JPY
            example:
              amount_jpy: 1200
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: URL of the created order resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
              example:
                id: "8f5ee7f1-1c6b-4f7c-9d3d-8a2a0f7b9c10"
                user_id: "7f930b0d-5e95-46d0-a7a6-e053e478a01e"
                amount_jpy: 1200
                status: "PENDING"
                created_at: "2025-09-27T07:00:00Z"
                updated_at: "2025-09-27T07:00:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /orders/{id}/pay:
    post:
      operationId: payOrder
      tags: [Orders]
      summary: Pay order
      description: Capture payment for the specified order.
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
          description: Order ID (UUID)
      responses:
        "204":
          description: No Content (payment succeeded)
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Order:
      type: object
      required: [id, user_id, amount_jpy, status, created_at, updated_at]
      properties:
        id:
          type: string
          description: Order ID (UUID)
        user_id:
          type: string
          description: Owner user ID (subject from IdP)
        amount_jpy:
          type: integer
          format: int64
          minimum: 1
          description: Amount in JPY
        status:
          type: string
          enum: [PENDING, PAID, CANCELED]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Error:
      type: object
      required: [message]
      properties:
        message:
          type: string

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema: { $ref: "#/components/schemas/Error" }
          example: { message: "invalid argument: amount_jpy must be > 0" }
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema: { $ref: "#/components/schemas/Error" }
          example: { message: "missing bearer token" }
    NotFound:
      description: Not Found
      content:
        application/json:
          schema: { $ref: "#/components/schemas/Error" }
          example: { message: "order not found" }
    Conflict:
      description: Conflict
      content:
        application/json:
          schema: { $ref: "#/components/schemas/Error" }
          example: { message: "conflict" }
